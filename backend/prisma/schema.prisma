generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type {
  STUDENT
  FACULTY
}

enum Gender {
  MALE
  FEMALE
}

model Review {
  id         String @id @default(uuid())
  reviewer   User   @relation(fields: [reviewerId], references: [id], onDelete: Cascade)
  reviewerId String
  comment    String
}

model Complain {
  id           String @id @default(uuid())
  complainer   User   @relation(fields: [complainerId], references: [id], onDelete: Cascade)
  complainerId String
  complain     String
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  username String @unique
  fullname String
  password String
  gender   Gender @default(MALE)

  profilePic String?
  vehiclePic String?
  type       Type       @default(STUDENT)
  isAdmin    Boolean    @default(false)
  phone      String?
  rating     Int        @default(0)
  reviews    Review[]
  complains  Complain[]

  conversations Conversation[]
  messages Message[]
}

model Message {
  id            String   @id @default(uuid())
  message       String
  sender        User     @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId      String
  conversation  Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId String
  createdAt     DateTime @default(now())
  editedAt      DateTime @updatedAt
}

model Conversation {
  id       String    @id @default(uuid())
  name     String
  users    User[]
  messages Message[]
}
